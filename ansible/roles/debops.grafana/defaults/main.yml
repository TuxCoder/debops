---
# .. vim: foldmarker=[[[,]]]:foldmethod=marker

# debops.grafana default variables [[[
# ====================================

# .. contents:: Sections
#    :local:
# .. envvar:: grafana__dependencies
#
# Should the ``debops.grafana`` role manage it's own dependencies (database, web server)?
grafana__dependencies: True

# Packages and installation [[[
# -----------------------------

# .. envvar:: grafana__base_packages [[[
#
# List of base packages required by Grafana.
grafana__base_packages:
  - grafana
                                                                   # ]]]
# .. envvar:: grafana__packages [[[
#
# List of additional APT packages to install with prometheus.
grafana__packages: []
                                                                   # ]]]
# .. envvar:: grafana__release [[[
#
# Release channel `stable` or `testing`
# http://docs.grafana.org/installation/debian/
grafana__release: 'stable'
                                                                   # ]]]
# .. envvar:: grafana__packages [[[
#
# List of additional repositories that get configured
grafana__apt__repositories:
  - repo: 'deb https://packagecloud.io/grafana/{{ grafana__release }}/debian/ {{ ansible_distribution_release }} main'
    filename: 'grafana'
                                                                   # ]]]
# .. envvar:: grafana__apt_keys [[[
#
# List of additional keys that get installed
grafana__apt__keys:
  - url: 'https://packagecloud.io/gpg.key'
                                                                   # ]]]
                                                                   # ]]]
# Grafana Configuration [[[
# ---------------------
#
# http://docs.grafana.org/installation/configuration/

grafana__port: 3000
grafana__domain: [ '{{ ansible_fqdn }}' ]

# Possible values:
# - mysql
# - postgresql
# - sqlite3
grafana__database: 'sqlite3'
grafana__database_name: 'grafana'
grafana__database_user: 'grafana'
grafana__database_server: "{{ ansible_local[grafana__database].server }}"
grafana__database_port: "{{ ansible_local[grafana__database].port }}"
# .. envvar:: grafana__database_password_path [[[
#
# Path to database password file.
grafana__database_password_path: "{{ secret + '/' + grafana__database + '/' +
                                    ansible_local[grafana__database].delegate_to }}{%
                                      if grafana__database=='postgresql' %}/{{ ansible_local[grafana__database].port }}{% endif
                                    %}{{ '/credentials/' + grafana__database_user +
                                    '/password' }}"
                                                                   # ]]]
# .. envvar:: grafana__database_password
#
# Database password for GitLab.
grafana__database_password: "{{  lookup('password', grafana__database_password_path + ' length=48') }}"

grafana__deploy_state: "present"
                                                                   # ]]]
# Ngninx Proxy Configuration [[[
# --------------------------
grafana__public: True
grafana__domain: 'monitor.{{ ansible_domain }}'
grafana__nginx__dependent_servers:
  - enabled: '{{ grafana__public }}'
    name: [ '{{ grafana__domain }}' ]
    type: 'proxy'
    proxy_pass: 'http://localhost:3000/'
                                                                   # ]]]
                                                                   # ]]]
